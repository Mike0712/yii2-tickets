<?php

namespace rgen3\tickets\models\forms;

use common\models\User;
use rgen3\tickets\models\TicketMessage;
use rgen3\tickets\models\TicketTheme;
use rgen3\tickets\Module;
use yii\base\Model;

class CreateTicket extends Model
{
    public $subject;
    public $message;
    public $status;

    private $userFrom;
    private $assignedTo;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->setUserFrom();
        $this->setAssignedTo();
    }

    public function setUserFrom()
    {
        $this->userFrom = \Yii::$app->user->id;
    }

    public function getUserFrom()
    {
        return $this->userFrom;
    }

    public function setAssignedTo()
    {
        $this->assignedTo = 1;
    }

    public function getAssignedTo()
    {
        return $this->assignedTo;
    }

    public function rules()
    {
        $userModel = Module::$userModel;
        return [
            [['subject', 'message'], 'required'],
            [['subject', 'message'], 'safe'],
            [['subject', 'message'], 'filter', 'filter' => function($value){
                $value = strip_tags($value);
                $value = htmlentities($value);
                $value = trim($value);
                return $value;
            }],
            [['userFrom', 'assignedTo'], 'integer'],
            [
                ['userFrom', 'assignedTo'],
                'exist',
                'skipOnError' => false,
                'targetClass' => $userModel::className(),
                'targetAttribute' => ['assignedTo' => 'id']
            ],
            ['status', 'boolean']
        ];
    }

    public function save()
    {
        $ticketThemes = new TicketTheme();
        $ticketMessage = new TicketMessage();

        $ticketThemes->user_from = $this->getUserFrom();
        $ticketThemes->assigned_to = $this->getAssignedTo();
        $ticketThemes->subject = $this->subject;
        $ticketThemes->is_closed = 0;

        if ($ticketThemes->validate())
        {
            $themeId = $ticketThemes->save();
        }
        else
        {
            return false;
        }

        $ticketMessage->message = $this->message;
        $ticketMessage->theme_id = $themeId;
        $ticketMessage->is_new = 1;

        $ticketMessage->save();

        return $themeId;
    }
}